<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <meta name="theme-color" content="#000000" />
  <title>Shaking Tokyo | Cards</title>
  <link rel="preconnect" href="https://fonts.googleapis.com" crossorigin>
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=IBM+Plex+Mono:wght@700&display=swap" rel="stylesheet">
  <style>
    :root{ --red:#ab1e22; --card-bg:rgba(255,255,255,0.05); --card-bg-hover:rgba(255,255,255,0.08); --backdrop:rgba(0,0,0,.6);}    
    *{ box-sizing:border-box; }
    html,body{ height:100%; }
    html{ color-scheme: dark; }
    body{
      margin:0; background:#000; color:#fff;
      font-family:"Noto Sans KR",system-ui,-apple-system,Segoe UI,Roboto,sans-serif;
      display:flex; flex-direction:column; align-items:center; justify-content:flex-start; min-height:100vh;
      -webkit-font-smoothing:antialiased; -moz-osx-font-smoothing:grayscale;
    }
    main{ display:flex; flex-direction:column; gap:40px; padding:40px 16px; width:100%; max-width:900px; }

    /* title wobble */
    h1#title{ margin:0 auto 16px; font-size:2.2rem; letter-spacing:.5px; color:var(--red); font-family:"IBM Plex Mono",monospace; font-weight:700; text-transform:lowercase; user-select:none; text-align:center; text-shadow:0 4px 8px rgba(171,30,34,0.35);}    
    #title .ch{ display:inline-block; will-change: transform; transform-origin:center bottom; }
    @keyframes shakeLetterVerticalSlow { 0%,100% { transform: translateY(0) rotate(0deg) } 10% { transform: translateY(-3px) rotate(-2deg) } 20% { transform: translateY(3px) rotate(2deg) } 30% { transform: translateY(-2px) rotate(-1.5deg) } 40% { transform: translateY(2px) rotate(1.5deg) } 50% { transform: translateY(-1.5px) rotate(-1deg) } 60% { transform: translateY(1.5px) rotate(1deg) } 70% { transform: translateY(-1px) rotate(-0.8deg) } 80% { transform: translateY(1px) rotate(0.8deg) } 90% { transform: translateY(0) rotate(0.3deg) } }
    #title.wobble .ch{ animation: shakeLetterVerticalSlow 3.8s ease-in-out infinite; animation-delay: calc(var(--i) * 80ms); }
    @media (prefers-reduced-motion: reduce){ #title.wobble .ch{ animation: none !important; } }

    /* cards */
    .menu-item{ position:relative; border:1px solid rgba(255,255,255,0.12); padding:24px; border-radius:12px; background:var(--card-bg); overflow:hidden; transition: transform .25s ease, background .25s ease, border-color .25s ease; cursor:pointer; }
    .menu-item:hover{ transform: translateY(-2px); background:var(--card-bg-hover); border-color:rgba(255,255,255,0.18); }
    .menu-item img{ width:100%; height:auto; border-radius:8px; margin-bottom:16px; display:block; background:#0a0a0a; }
    .row-top{ display:flex; justify-content:space-between; align-items:center; gap:12px; margin-bottom:12px; }
    .name{ font-size:1.34rem; font-weight:700; color:var(--red); }
    .desc{ font-size:1rem; line-height:1.6; margin-top:10px; }

    /* floating trigger button (uses your provided icon) */
    .fab{ position:fixed; right:16px; bottom:16px; width:56px; height:56px; border-radius:12px; display:grid; place-items:center; background:#111; border:1px solid #333; cursor:pointer; box-shadow:0 8px 24px rgba(0,0,0,.35); z-index:60; }
    .fab img{ width:32px; height:32px; display:block; }
    .fab:focus-visible{ outline:2px solid var(--red); outline-offset:2px; }

    /* modal / panel */
    .backdrop{ position:fixed; inset:0; background:var(--backdrop); opacity:0; pointer-events:none; transition:opacity .2s ease; z-index:80; }
    .backdrop.open{ opacity:1; pointer-events:auto; }
    .panel{ position:fixed; left:50%; bottom:-10%; transform:translateX(-50%); width:min(900px,92vw); background:#0c0c0c; border:1px solid #333; border-radius:16px 16px 0 0; box-shadow:0 -12px 40px rgba(0,0,0,.5); z-index:90; padding:16px; translate:0 110%; transition:translate .25s ease; }
    .panel.open{ translate:0 0; bottom:0; }
    .panel-header{ display:flex; justify-content:space-between; align-items:center; gap:8px; padding:4px 4px 12px; border-bottom:1px solid #222; }
    .tabs{ display:flex; gap:6px; }
    .tab{ border:1px solid #333; background:#101010; color:#ddd; border-radius:999px; font-size:.9rem; padding:6px 12px; cursor:pointer; }
    .tab[aria-selected="true"]{ border-color:var(--red); color:#fff; }
    .close-btn{ border:1px solid #333; background:#101010; color:#ddd; border-radius:8px; padding:6px 10px; cursor:pointer; }

    .panel-body{ padding:12px 4px 4px; }
    .tab-pane{ display:none; }
    .tab-pane.active{ display:block; }

    /* language pane */
    .lang-controls{ display:flex; flex-wrap:wrap; gap:8px; align-items:center; margin-bottom:12px; }
    .chip{ border:1px solid #333; background:#0d0d0d; color:#ddd; border-radius:999px; font-size:.88rem; padding:6px 12px; cursor:pointer; }
    .chip[aria-pressed="true"]{ border-color:var(--red); color:#fff; }
    .lang-lines{ display:grid; gap:8px; }
    .line{ background:#0f0f0f; border:1px solid #222; border-radius:8px; padding:8px 10px; font-size:1rem; }
    .line small{ opacity:.7; margin-right:8px; font-weight:700; }

    /* sound pane */
    .video-wrap{ margin:0; }
    video{ width:100%; height:auto; border-radius:12px; display:block; background:#000; }
    .video-tip{ font-size:.85rem; opacity:.7; margin-top:6px; }

    @media (max-width:900px){ body{ font-size:15px; } main{ gap:28px; } h1#title{ font-size:1.9rem; } }
    @media (max-width:600px){ h1#title{ font-size:1.6rem; } .menu-item{ padding:18px; } }
  </style>
</head>
<body>
  <main>
    <h1 id="title" aria-label="Shaking Tokyo title">shaking tokyo!</h1>

    <!-- NOTE: 영상은 이제 Sound 메뉴 안으로 이동했습니다. 여기서는 카드만 표시합니다. -->

    <article class="menu-item" data-ko="나는 히키코모리다." data-en="I am a hikikomori." data-ja="私は引きこもりです。">
      <img src="scene-hikikomori.png" alt="나는 히키코모리다 장면" loading="lazy" decoding="async">
      <div class="row-top"><span class="name" aria-live="polite"></span></div>
      <p class="desc">For ten years, life has quietly unfolded within narrow walls, where days blur into one another. The room replaces the world; the books my company. What once was a condition slowly becomes an identity that fills every corner.</p>
    </article>

    <article class="menu-item" data-ko="이것이 사라지기 전까지 10년." data-en="Ten years until this disappears." data-ja="これが消えるまでの10年。">
      <img src="scene-10years.png" alt="이것이 사라지기 전까지 10년 장면" loading="lazy" decoding="async">
      <div class="row-top"><span class="name" aria-live="polite"></span></div>
      <p class="desc">Ten years pass in silence, and the boundaries of the room dissolve into the mind itself. The stillness grows, marking time only through the dust that falls.</p>
    </article>

    <article class="menu-item" data-ko="매주 토요일에는 피자를 먹는다." data-en="Every Saturday, I eat pizza." data-ja="毎週土曜日はピザを食べる。">
      <img src="scene-pizza.png" alt="매주 토요일에는 피자를 먹는다 장면" loading="lazy" decoding="async">
      <div class="row-top"><span class="name" aria-live="polite"></span></div>
      <p class="desc">The week gains rhythm; a door opens, a box changes hands, and routine takes the place of talk. Saturday becomes a ritual.</p>
    </article>

    <article class="menu-item" data-ko="사물이 사람을 대체한다." data-en="Objects replace people." data-ja="物が人を置き換える。">
      <img src="scene-objects.png" alt="사물이 사람을 대체한다 장면" loading="lazy" decoding="async">
      <div class="row-top"><span class="name" aria-live="polite"></span></div>
      <p class="desc">Letters without names stand where conversation might. Minimal things promise freedom, but often perform a quiet imprisonment.</p>
    </article>

    <article class="menu-item" data-ko="11년 만에 눈이 마주쳤다." data-en="Our eyes met for the first time in eleven years." data-ja="11年ぶりに目が合った。">
      <img src="scene-eyes.png" alt="11년 만에 눈이 마주쳤다 장면" loading="lazy" decoding="async">
      <div class="row-top"><span class="name" aria-live="polite"></span></div>
      <p class="desc">A brief exchange, fragile as breath. After years of silence, a glance weighs more than words.</p>
    </article>

    <article class="menu-item" data-ko="죄송합니다 실수로 잘못 눌렀어요." data-en="Sorry, I pressed it by mistake." data-ja="すみません、間違えて押しました。">
      <img src="scene-sorry.png" alt="죄송합니다 실수로 잘못 눌렀어요 장면" loading="lazy" decoding="async">
      <div class="row-top"><span class="name" aria-live="polite"></span></div>
      <p class="desc">An apology that replaces explanation; rupture stitched with politeness, a neat label over a messy feeling.</p>
    </article>

    <article class="menu-item" data-ko="히키코모리가 히키코모리를 만난다." data-en="A hikikomori meets another hikikomori." data-ja="引きこもりが引きこもりに出会う。">
      <img src="scene-meet.png" alt="히키코모리가 히키코모리를 만난다 장면" loading="lazy" decoding="async">
      <div class="row-top"><span class="name" aria-live="polite"></span></div>
      <p class="desc">When one recluse meets another, silence mirrors silence, and solitude recognizes itself. A brief reflection of the same world, folded twice.</p>
    </article>
  </main>

  <!-- Floating Action Button (trigger) -->
  <button id="fab" class="fab" aria-haspopup="dialog" aria-controls="menu-panel" aria-expanded="false" title="Open menu">
    <img src="menu-icon.png" alt="menu icon" />
  </button>

  <!-- Backdrop + Bottom Panel -->
  <div id="backdrop" class="backdrop" hidden></div>
  <section id="menu-panel" class="panel" role="dialog" aria-modal="true" aria-labelledby="panel-title" hidden>
    <header class="panel-header">
      <div class="tabs" role="tablist" aria-label="Options">
        <button class="tab" id="tab-sound" role="tab" aria-controls="pane-sound" aria-selected="true">Sound</button>
      <button class="tab" id="tab-language" role="tab" aria-controls="pane-language" aria-selected="false">Language</button>
      </div>
      <button class="close-btn" id="close-panel" aria-label="닫기">Close</button>
    </header>
    <div class="panel-body">
      <div id="pane-sound" class="tab-pane active" role="tabpanel" aria-labelledby="tab-sound">
        <figure class="video-wrap">
          <video id="video" controls autoplay muted playsinline loop preload="metadata" poster="poster.png" aria-label="Shaking Tokyo trailer">
            <source src="videoplayback.mp4" type="video/mp4">
            브라우저가 video 태그를 지원하지 않습니다.
          </video>
          <figcaption class="video-tip">음소거 해제하려면 동영상 컨트롤을 사용하세요.</figcaption>
        </figure>
      </div>
      <div id="pane-language" class="tab-pane" role="tabpanel" aria-labelledby="tab-language">
        <div class="lang-controls">
          <strong>언어:</strong>
          <button class="chip" data-setlang="ko" aria-pressed="true">KO</button>
          <button class="chip" data-setlang="en" aria-pressed="false">EN</button>
          <button class="chip" data-setlang="ja" aria-pressed="false">JP</button>
        </div>
        <div class="lang-lines" aria-live="polite">
          <div class="line"><small>KO</small><span id="ln-ko"></span></div>
          <div class="line"><small>EN</small><span id="ln-en"></span></div>
          <div class="line"><small>JP</small><span id="ln-ja"></span></div>
        </div>
      </div>
    </div>
  </section>

  <script>
    // title wobble split
    (function(){ const t=document.getElementById('title'); const s=t.textContent; t.innerHTML=[...s].map((ch,i)=>`<span class="ch" style="--i:${i}">${ch===' ' ? ' ' : ch}</span>`).join(''); t.classList.add('wobble'); t.addEventListener('click', ()=>{ t.classList.remove('wobble'); void t.offsetWidth; t.classList.add('wobble'); }); })();

    // init card headings (default ko)
    const order=['ko','en','ja'];
    function pick(card, lang){ return (card.dataset[lang]||'').trim(); }
    document.querySelectorAll('.menu-item').forEach(card=>{ card.dataset.currentLang='ko'; card.querySelector('.name').textContent=pick(card,'ko'); });

    // selection state for language pane
    let selectedCard = null;
    function setSelectedCard(card){ selectedCard = card; updateLanguagePane(); }
    function updateLanguagePane(){
      const ko = selectedCard ? pick(selectedCard,'ko') : '';
      const en = selectedCard ? pick(selectedCard,'en') : '';
      const ja = selectedCard ? pick(selectedCard,'ja') : '';
      document.getElementById('ln-ko').textContent = ko;
      document.getElementById('ln-en').textContent = en;
      document.getElementById('ln-ja').textContent = ja;
      // reflect current language chips
      const cur = (selectedCard && selectedCard.dataset.currentLang) || 'ko';
      document.querySelectorAll('[data-setlang]').forEach(b=> b.setAttribute('aria-pressed', b.dataset.setlang===cur ? 'true' : 'false'));
    }
    // clicking any card opens language pane with that card selected
    document.querySelectorAll('.menu-item').forEach(card=>{
      card.addEventListener('click', ()=>{ setSelectedCard(card); openPanel('language'); });
    });

    // Floating menu logic
    const fab = document.getElementById('fab');
    const panel = document.getElementById('menu-panel');
    const backdrop = document.getElementById('backdrop');
    const closeBtn = document.getElementById('close-panel');

    function openPanel(tab){ backdrop.hidden=false; panel.hidden=false; setTimeout(()=>{ backdrop.classList.add('open'); panel.classList.add('open'); }, 0); fab.setAttribute('aria-expanded','true'); if(tab) switchTab(tab); }
    function closePanel(){ backdrop.classList.remove('open'); panel.classList.remove('open'); fab.setAttribute('aria-expanded','false'); setTimeout(()=>{ backdrop.hidden=true; panel.hidden=true; }, 200); }

    fab.addEventListener('click', ()=> openPanel());
    backdrop.addEventListener('click', closePanel);
    closeBtn.addEventListener('click', closePanel);
    document.addEventListener('keydown', (e)=>{ if(e.key==='Escape') closePanel(); });

    // Tabs
    const tabs={ sound: {btn:document.getElementById('tab-sound'), pane:document.getElementById('pane-sound')}, language:{btn:document.getElementById('tab-language'), pane:document.getElementById('pane-language')} };
    function switchTab(which){ Object.entries(tabs).forEach(([k,{btn,pane}])=>{ const active = k===which; btn.setAttribute('aria-selected', active?'true':'false'); pane.classList.toggle('active', active); }); if(which==='language' && !selectedCard){ const first=document.querySelector('.menu-item'); if(first) setSelectedCard(first); }}
    tabs.sound.btn.addEventListener('click', ()=>switchTab('sound'));
    tabs.language.btn.addEventListener('click', ()=>switchTab('language'));

    // Language chip -> set current language for selected card (and update its heading)
    document.querySelectorAll('[data-setlang]').forEach(btn=>{
      btn.addEventListener('click', ()=>{
        if(!selectedCard) return; const lang=btn.dataset.setlang; selectedCard.dataset.currentLang=lang; selectedCard.querySelector('.name').textContent = pick(selectedCard, lang); updateLanguagePane();
      });
    });
  </script>

  <noscript>이 페이지는 자바스크립트에 의존합니다. 브라우저에서 자바스크립트를 활성화하세요.</noscript>
</body>
</html>
